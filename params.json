{"name":"Crucible","tagline":"The multi-tier development framework","body":"Well, we want to build a new framework because of following reasons\r\n\r\n* **No guarantee of a better website**: All frameworks make your site easier to build but no one makes it better.\r\n* **Only server-side language specific**: All frameworks only works on php(or a server side language) but a website is a combination of so many things like a server side language, HTML, JavaScript, CSS, images(sprites), caching, content-encoding(gzipping), cookies etc.. But no body wants to look on the complete experience.\r\n* **Huge waste of bandwidth and user time**: If you compare two pages on website, it would be 50-60% same (header,footer, sidebar etc. ) but when you go to next page all will be gone and next page will be loaded as fresh. Above that if the user comes again to the same page previously loaded, it is again loaded fresh. What a waste ..\r\n* **No restriction for wrong things**: It's really not restricting me if I am doing anything wrong. If I broke some html tag, no framework will tell me that its going wrong. Some of them can, but they choose not to, because they are already busy rendering duplicate and useless bits and they think filtering content may be a waste of resources. (Atleast it could be checked when a system detect a change in the resources )\r\n* **No inbuilt tools for optimization**: For example sprites are such a easy thing as far as to reduce the bandwidth in image rendering. But no body(neither developer nor designer) is willing to do that because it require some labour. Labour to join all the numerous images by designers and putting the replaced divs with special css at the previous image place by developers. For god sake we(or any framework) could easily build a tool which could give this as an in-build feature. Apart from that no body checks weather your js/css files are minified or not, an appropriate expire headers are set on them or not. they are zipped or not .. etc. The list is very long. \r\n* **They all are slow** : Since all the frameworks are mainly designed to create a website whose main business logic should be written at backend server. This discourages the utilization of huge CPU powers lying there at users end. \r\n* **They all don't support clusters** : All frameworks are written as in they are meant to run on a single server website. But the truth is that all the normal websites are serving so much of data that its not possible with a single sever and multiple servers, whether application server or database server, They are very common in sight these days. Frameworks have no or very little provisions to tackle this issue. Developers have to hack the frameworks and create a work around for this. \r\n* **They donâ€™t support deployment**: Again a typical issue because of multiple server. Why there is no inbuilt tool for easy deployment with easy scripts. It should handle the deployment even if there is any db change. If complete deployment would start happening through scripts then deployments will be error free and fast.\r\n* **Easy Error Logging**: It's a much awaited feature but it never get implemented by the frameworks. Why I should not be told that how many pages of my sites are showing 404 errors? Or how many 500 errors are coming on some user flow with some specific group of users. Could we tolerate such kinds of defects on our websites. These types of errors are a deal breakers as fas as customer acquisition or branding is concerned. But no I have to go to my system admin to get to this information and then after 2-3 days he will get me this info. Its such a shame. May be after sometime I will loose my whole enthusiasm of fixing these errors. So if any of these errors occur it should be logged into the database and should be searchable and could be looked upon in a easy graph. \r\n* **Easy Analytics**: Again this is a much awaited feature but the frameworks never did it because google has already done it to some extent. But this has some serious drawbacks. \r\n    * First, google drop lots of traffic coming to their way.Means if I have clicked your website button 10 times. it would always be less than 10 times and it will be never real time. \r\n    * Second, Google only records clicks on a hyperlink with some href value not on any button, any div etc. But now web is not static hyperlink driven any more. In fact its not for a very long time.\r\n    * Due to above reasons javascript driven website faces very hardtime getting tracked by google-analytics.\r\n* **No backup support**: Frameworks also don't support any data or code backup activity. Couldn't that be done easily and safely with a script.  \r\n* **Future**: Last but not the least why restrict yourself to php only. We all know that php works best in producing HTML and that is eventually needed but why not to integrate it with node.js to get its incredible qualities of web-sockets which could be used to make true real time applications.","google":"UA-42881266-1","note":"Don't delete this file! It's used internally to help with page regeneration."}